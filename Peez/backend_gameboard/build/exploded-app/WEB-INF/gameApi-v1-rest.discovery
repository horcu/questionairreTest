{
 "kind": "discovery#restDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/FhgSF51AsbmiB0Pwh0tKa8kGv_s\"",
 "discoveryVersion": "v1",
 "id": "gameApi:v1",
 "name": "gameApi",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "backend_gameboard.peez.apps.horcu.com",
 "ownerName": "backend_gameboard.peez.apps.horcu.com",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://ballrz-7d916.appspot.com/_ah/api/gameApi/v1/",
 "basePath": "/_ah/api/gameApi/v1/",
 "rootUrl": "https://ballrz-7d916.appspot.com/_ah/api/",
 "servicePath": "gameApi/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "CollectionResponse_Game": {
   "id": "CollectionResponse_Game",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Game"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "Game": {
   "id": "Game",
   "type": "object"
  }
 },
 "methods": {
  "get": {
   "id": "gameApi.get",
   "path": "game/{gameId}",
   "httpMethod": "GET",
   "parameters": {
    "gameId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "gameId"
   ],
   "response": {
    "$ref": "Game"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insert": {
   "id": "gameApi.insert",
   "path": "game",
   "httpMethod": "POST",
   "request": {
    "$ref": "Game",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Game"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "list": {
   "id": "gameApi.list",
   "path": "game",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_Game"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "patch": {
   "id": "gameApi.patch",
   "path": "game/{gameId}",
   "httpMethod": "PATCH",
   "parameters": {
    "gameId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "gameId"
   ],
   "request": {
    "$ref": "Game"
   },
   "response": {
    "$ref": "Game"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "remove": {
   "id": "gameApi.remove",
   "path": "game/{gameId}",
   "httpMethod": "DELETE",
   "parameters": {
    "gameId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "gameId"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "update": {
   "id": "gameApi.update",
   "path": "game/{gameId}",
   "httpMethod": "PUT",
   "parameters": {
    "gameId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "gameId"
   ],
   "request": {
    "$ref": "Game",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Game"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
